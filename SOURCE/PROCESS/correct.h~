#ifndef __CORRECT__
#define __CORRECT__

using namespace std;

typedef double R;

void verlet_ind(R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, vector< vector<int>  > & coul,int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, int NBENREG);
void verlet_qs(int ite, R & Ec, R & Epp, bool &bout,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6,int NBENREG);
void verlet(R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, vector< vector<int>  > & coul,int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, int NBENREG);
void verlet_trac(R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, vector< vector<int>  > & coul,int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, int NBENREG, R fimp, int nitf);
void verlet_comp(int NBENREG, R & ftot,R & ftot2, R epsi, R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, vector< vector<int>  > & coul,int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, R fimp, int nitf);
void verlet_torsion(R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, vector< vector<int>  > & coul,int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, int NBENREG, R fimp,R mimp, int nitf);
void verlet_trac_qs_nrj(R & Ec, R & Epp, int ite, int NB_SPH,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_XA, R * LIST_YA, R * LIST_ZA,  R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_TXA, R * LIST_TYA, R * LIST_TZA,R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, R fimp, int nitf, R & reac, R & dpct, R & dpct2);
void verlet_brazil_qs(int NBENREG, R & ftot,R & ftot2, R epsi, R & Ec, R & Epp,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, R fimp, int nitf);
void verlet_brazil(int NBENREG, R & ftot,R & ftot2, R epsi, R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, vector< vector<int>  > & coul,int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, R fimp, int nitf);
#endif
