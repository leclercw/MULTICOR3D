#include "../MAIN/def.h"

#ifndef __CORRECT__
#define __CORRECT__

void verlet_tracy(R & ftot, R & ftot2, R & Ec, R & Epp, R viti, int vecsize, int vecsizex, int vecsizey,int vecsizez, int ** coul, int * nocoul,int * LIST_C,R H_TOT,R V_TOT,R Z_TOT,R H_POS,R V_POS,R Z_POS,int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6);

void verlet_tracy_qs(R & ftot, R & ftot2, R & Ec, R & Epp, R viti, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6);

void verlet_cis_cyl(int NBENREG, R & ftot,R & ftot2,R & ftot3, R epsi, R ** LIST_PX, R ** LIST_PY, R ** LIST_PZ,R ** LIST_PVX, R ** LIST_PVY, R ** LIST_PVZ,  R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, int ** coul, int * nocoul, int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT,R H_POS,R V_POS,R Z_POS, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, bool * EDGEC1,bool * EDGEC2, R fimp, int nitf);

void verlet_ind(R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, int ** coul, int * nocoul,int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT,R H_POS,R V_POS,R Z_POS, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, int NBENREG);

void verlet_symt_qs(R & Ec, R & Epp, bool &bout,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6,int NBENREG);

void verlet_symt(R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, int ** coul, int * nocoul,int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT,R H_POS,R V_POS,R Z_POS, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, int NBENREG);

void verlet_trac(R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, int ** coul, int * nocoul,int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT,R H_POS,R V_POS,R Z_POS, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, int NBENREG, R fimp, int nitf);

void verlet_comp(int NBENREG, R & ftot,R & ftot2, R epsi, R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, int ** coul, int * nocoul,int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT,R H_POS,R V_POS,R Z_POS, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, R fimp, int nitf);

void verlet_torsion(R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, int ** coul, int * nocoul,int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT,R H_POS,R V_POS,R Z_POS, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, int NBENREG, R fimp,R mimp, int nitf);

void verlet_brazil_qs(int NBENREG, R & ftot,R & ftot2, R epsi, R & Ec, R & Epp,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, R fimp, int nitf);

void verlet_brazil(int NBENREG, R & ftot,R & ftot2, R epsi, R & Ec, R & Epp, int vecsize, int vecsizex, int vecsizey,int vecsizez, int ** coul, int * nocoul,int * LIST_C,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT,R H_POS,R V_POS,R Z_POS, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, R fimp, int nitf);

void verlet_qs_dila(R & Ec, R & Epp, int ite,int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6,int NBENREG,R & dpltx,R & dplty,R & dpltz);

void verlet_qs_hygr(R & Ec, R & Epp, int ite,int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6,int NBENREG,R & dpltx,R & dplty,R & dpltz);

void verlet(R & Ec, R & Epp,int vecsize, int vecsizex, int vecsizey,int vecsizez, int ** coul, int * nocoul,int * LIST_C,R H_TOT,R V_TOT,R Z_TOT,R H_POS,R V_POS,R Z_POS,int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ);

void verlet_qs(R & Ec, R & Epp,int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ);

void verlet_qs_incr(R & Ec, R & Epp, bool &bout,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XA, R * LIST_YA, R * LIST_ZA,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ,R * LIST_TXA, R * LIST_TYA, R * LIST_TZA, R * LIST_VX, R * LIST_VY, R * LIST_VZ,R * LIST_VXA, R * LIST_VYA, R * LIST_VZA, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ,R * FIX, R * FIY, R * FIZ, R * MTIX, R * MTIY, R * MTIZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, int NBENREG);

void verlet_incr(R & Ec, R & Epp, bool &bout,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT,R H_POS,R V_POS,R Z_POS, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XA, R * LIST_YA, R * LIST_ZA,R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ,R * LIST_TXA, R * LIST_TYA, R * LIST_TZA, R * LIST_VX, R * LIST_VY, R * LIST_VZ,R * LIST_VXA, R * LIST_VYA, R * LIST_VZA, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ,R * FIX, R * FIY, R * FIZ, R * MTIX, R * MTIY, R * MTIZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6,bool * EDGEC, int NBENREG);

void verlet_brazil_qs_incr(int NBENREG, R & ftot,R & ftot2, R epsi, R & Ec, R & Epp,R & nuu, R &Emoy,R &Emoy1, int ite, R viti,R H_TOT,R V_TOT,R Z_TOT, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z,R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ,R * LIST_TXA, R * LIST_TYA, R * LIST_TZA, R * LIST_VX, R * LIST_VY, R * LIST_VZ,R * LIST_VXA, R * LIST_VYA, R * LIST_VZA, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ,R * FIX, R * FIY, R * FIZ, R * MTIX, R * MTIY, R * MTIZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6, R fimp, int nitf);

void verlet_symt_qs_DCB(R & ftot,R & ftot2,R & Ec, R viti, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6,bool * EDGE1M1,bool * EDGE1M2);

void verlet_symt_qs_ELS(R & ftot,R & ftot2,R & Ec, R viti, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6,bool * EDGE1M1,bool * EDGE1M2);

void verlet_symt_qs_MMB(R & ftot,R & ftot2,R & Ec, R viti, int nD,R dt,R * LIST_M,R * LIST_I, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE1,bool * EDGE2,bool * EDGE3,bool * EDGE4,bool * EDGE5,bool * EDGE6,bool * EDGE13,bool * EDGE43, bool * EDGE6X, bool * EDGE7X);

#endif
