#include "../MAIN/def.h"

#ifndef __INIT__
#define __INIT__

using namespace std;

void init_sphp_cis(bool * TYPCO, int NMAXCONT, R Pi, R dens, R epsi, int vecsizex, int vecsizey, int vecsizez,int ** coul, int * nocoul, R & PR_SPH, R H_TOT, R V_TOT, R Z_TOT,R H_POS, R V_POS, R Z_POS, int NB_SPH, R R_SPH, int * LIST_B, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, int * LIST_C, R * LIST_M, R * LIST_I, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE, bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6,bool * EDGEC1, bool * EDGEC2, int * NBCONTCO, R * LIST_V, R * LIST_IND, R & N1, R & N2, R & N3, R & N4, R & N5, R & N6);

void init_paroi(int NB_PAR, R densp, R epaisp, R ** LIST_PX, R ** LIST_PY, R ** LIST_PZ, R ** LIST_PVX, R ** LIST_PVY, R ** LIST_PVZ, R ** LIST_PAX, R ** LIST_PAY, R ** LIST_PAZ, R ** LIST_PN, R * LIST_PM);

void init_sizeh(int & vecsizeh, int & vecsizexh,int & vecsizeyh, int & vecsizezh, vector< vector<int>  > & coulh,vector< vector<int>  > & numch, R H_TOT, R V_TOT, R Z_TOT, R & RHALO, int SZHALO, R R_SPH);

void init_sph(bool * TYPCO, int NMAXCONT,R Pi, R dens, R epsi, int vecsizex, int vecsizey, int vecsizez, int ** coul, int * nocoul,R & PR_SPH, R H_TOT, R V_TOT, R Z_TOT,R H_POS, R V_POS, R Z_POS, int NB_SPH, R R_SPH, int * LIST_B, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_TX, R * LIST_TY, R * LIST_TZ,R * LIST_TXA, R * LIST_TYA, R * LIST_TZA, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, int * LIST_C, R * LIST_M, R * LIST_I, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE,bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6, int * NBCONTCO, R * LIST_V, R * LIST_IND, R & N1, R & N2, R & N3, R & N4, R & N5, R & N6);

void init_sphp(bool * TYPCO, int NMAXCONT,R Pi, R dens, R epsi, int vecsizex, int vecsizey, int vecsizez, int ** coul,int * nocoul,R & PR_SPH, R H_TOT, R V_TOT, R Z_TOT,R H_POS, R V_POS, R Z_POS, int NB_SPH, R R_SPH,int * LIST_B, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_TX, R * LIST_TY, R * LIST_TZ,R * LIST_TXA, R * LIST_TYA, R * LIST_TZA, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, int * LIST_C, R * LIST_M, R * LIST_I, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE,bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6, int * NBCONTCO, R * LIST_V, R * LIST_IND, R & N1, R & N2, R & N3, R & N4, R & N5, R & N6);

void init_sph_ind(bool * TYPCO, int NMAXCONT, R Pi, R dens, R epsi, int vecsizex, int vecsizey, int vecsizez,int ** coul, int * nocoul,R & PR_SPH, R H_TOT, R V_TOT, R Z_TOT,R H_POS, R V_POS, R Z_POS, int NB_SPH, R R_SPH, int * LIST_B, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_TX, R * LIST_TY, R * LIST_TZ,R * LIST_TXA, R * LIST_TYA, R * LIST_TZA, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, int * LIST_C, R * LIST_M, R * LIST_I, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE, bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6, int * NBCONTCO, R * LIST_V, R * LIST_IND, R & N1, R & N2, R & N3, R & N4, R & N5, R & N6);

void init_sphp_ind(bool * TYPCO, int NMAXCONT, R Pi, R dens, R epsi, int vecsizex, int vecsizey, int vecsizez,int ** coul, int * nocoul, R & PR_SPH, R H_TOT, R V_TOT, R Z_TOT,R H_POS, R V_POS, R Z_POS, int NB_SPH, R R_SPH, int * LIST_B, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_TX, R * LIST_TY, R * LIST_TZ,R * LIST_TXA, R * LIST_TYA, R * LIST_TZA, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, int * LIST_C, R * LIST_M, R * LIST_I, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE, bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6, int * NBCONTCO, R * LIST_V, R * LIST_IND, R & N1, R & N2, R & N3, R & N4, R & N5, R & N6);

void init_sph_halo(bool * TYPCO, int NMAXCONT, R Pi, R dens, R epsi, int vecsizex, int vecsizey, int vecsizez,int ** coul, int * nocoul,int vecsizexh, int vecsizeyh, int vecsizezh,vector< vector<int>  > & coulh, R & PR_SPH, R H_TOT, R V_TOT, R Z_TOT,R H_POS, R V_POS, R Z_POS, int NB_SPH, R R_SPH, int * LIST_B, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_TXA, R * LIST_TYA, R * LIST_TZA, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, int * LIST_C, int * LIST_H, R * LIST_M, R * LIST_I, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE, bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6, int * NBCONTCO, R * LIST_V, R * LIST_IND, R & N1, R & N2, R & N3, R & N4, R & N5, R & N6);

void init_sph_halo2(bool * TYPCO, int NMAXCONT, R Pi, R dens1,R dens2, R epsi, int vecsizex, int vecsizey, int vecsizez,int ** coul, int * nocoul,int vecsizexh, int vecsizeyh, int vecsizezh,vector< vector<int>  > & coulh, R & PR_SPH, R H_TOT, R V_TOT, R Z_TOT, R H_POS, R V_POS, R Z_POS,int NB_SPH, R R_SPH, int * LIST_B, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_TX, R * LIST_TY, R * LIST_TZ,R * LIST_TXA, R * LIST_TYA, R * LIST_TZA, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, int * LIST_C, int * LIST_H, R * LIST_M, R * LIST_I, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE, bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6, int * NBCONTCO, bool * LIST_P, R * LIST_V, R * LIST_IND, R & N1, R & N2, R & N3, R & N4, R & N5, R & N6);

void init_sphp_halo(bool * TYPCO, int NMAXCONT, R Pi, R dens, R epsi, int vecsizex, int vecsizey, int vecsizez,int ** coul, int * nocoul,int vecsizexh, int vecsizeyh, int vecsizezh,vector< vector<int>  > & coulh, R & PR_SPH, R H_TOT, R V_TOT, R Z_TOT,R H_POS, R V_POS, R Z_POS, int NB_SPH, R R_SPH, int * LIST_B, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_TXA, R * LIST_TYA, R * LIST_TZA,R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, int * LIST_C, int * LIST_H, R * LIST_M, R * LIST_I, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE, bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6, int * NBCONTCO, R * LIST_V, R * LIST_IND, R & N1, R & N2, R & N3, R & N4, R & N5, R & N6);

void init_sphp_halo_car(R EE, bool * TYPCO, int NMAXCONT, R Pi, R dens, R epsi, int vecsizex, int vecsizey, int vecsizez,int ** coul, int * nocoul,int vecsizexh, int vecsizeyh, int vecsizezh,vector< vector<int>  > & coulh, R & PR_SPH, R H_TOT, R V_TOT, R Z_TOT,R H_POS, R V_POS, R Z_POS, int NB_SPH, R R_SPH, int * LIST_B, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_XA, R * LIST_YA, R * LIST_ZA,R * LIST_TX, R * LIST_TY, R * LIST_TZ, R * LIST_TXA, R * LIST_TYA, R * LIST_TZA,R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, int * LIST_C, int * LIST_H, R * LIST_M, R * LIST_I, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE, bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6, int * NBCONTCO, R * LIST_V, R * LIST_IND, R & N1, R & N2, R & N3, R & N4, R & N5, R & N6);

void init_sph2(bool * TYPCO, int NMAXCONT,R Pi, R dens1, R dens2, R epsi, int vecsizex, int vecsizey, int vecsizez,int ** coul, int * nocoul,R & PR_SPH, R H_TOT, R V_TOT, R Z_TOT,R H_POS, R V_POS, R Z_POS, int NB_SPH, R R_SPH,int * LIST_B, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_XA, R * LIST_YA, R * LIST_ZA,  R * LIST_TX, R * LIST_TY, R * LIST_TZ,R * LIST_TXA, R * LIST_TYA, R * LIST_TZA, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, int * LIST_C, R * LIST_M, R * LIST_I, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE,bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6, int * NBCONTCO, bool * LIST_P, R * LIST_V, R * LIST_IND, R & N1, R & N2, R & N3, R & N4, R & N5, R & N6);

void scale_paroi(int NB_PAR, R ** LIST_PX, R ** LIST_PY, R ** LIST_PZ, R * LIST_PM, int NBCOP, R * DCONTP,  R & epaisp, R H_TOT2, R lmacro);

void scale_sph(R Pi, R & H_TOT, R & V_TOT, R & Z_TOT, R & H_POS, R & V_POS, R & Z_POS,int & NB_SPH, R & R_SPH, R & RMAX, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_M, R * LIST_I, R & epsi, R lmacro, R dens, R * LIST_V);

void scale_sphp(R Pi, R & H_TOT, R & V_TOT, R & Z_TOT, R & H_POS, R & V_POS, R & Z_POS, int & NB_SPH, R & R_SPH, R & RMAX, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_M, R * LIST_I, R & epsi, R lmacro, R dens, R * LIST_V);

void scale_sph_ind(R Pi, R & H_TOT, R & V_TOT, R & Z_TOT, R & H_POS, R & V_POS, R & Z_POS, int & NB_SPH, R & R_SPH, R & RMAX, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_M, R * LIST_I, R & epsi, R lmacro, R dens, R rind, R * LIST_V);

void scale_sphp_ind(R Pi, R & H_TOT, R & V_TOT, R & Z_TOT,  R & H_POS, R & V_POS, R & Z_POS,int & NB_SPH, R & R_SPH, R & RMAX, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_M, R * LIST_I, R & epsi, R lmacro, R dens, R rind, R * LIST_V);

void scale_sph2(R Pi, R & H_TOT, R & V_TOT, R & Z_TOT,  R & H_POS, R & V_POS, R & Z_POS,int & NB_SPH, R & R_SPH, R & RMAX, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO, R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_M, R * LIST_I, R & epsi, R lmacro, R dens1, R dens2, bool * LIST_P, R * LIST_V);

void init_sphp_cyl(bool * TYPCO, int NMAXCONT, R Pi, R dens, R epsi, int vecsizex, int vecsizey, int vecsizez,int ** coul, int * nocoul,R & PR_SPH, R H_TOT, R V_TOT, R Z_TOT,R H_POS, R V_POS, R Z_POS, int NB_SPH, R R_SPH, int * LIST_B, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_TX, R * LIST_TY, R * LIST_TZ,R * LIST_TXA, R * LIST_TYA, R * LIST_TZA, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, int * LIST_C, R * LIST_M, R * LIST_I, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE, bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6,bool * EDGEC, int * NBCONTCO, R * LIST_V, R * LIST_IND, R & N1, R & N2, R & N3, R & N4, R & N5, R & N6);

void init_sph_halo_cyl(bool * TYPCO, int NMAXCONT, R Pi, R dens, R epsi, int vecsizex, int vecsizey, int vecsizez,int ** coul,int * nocoul,int vecsizexh, int vecsizeyh, int vecsizezh,vector< vector<int>  > & coulh, R & PR_SPH, R H_TOT, R V_TOT, R Z_TOT,R H_POS, R V_POS, R Z_POS, int NB_SPH, R R_SPH, int * LIST_B, R * LIST_R, R * LIST_X, R * LIST_Y, R * LIST_Z, R * LIST_XO, R * LIST_YO, R * LIST_ZO,R * LIST_XA, R * LIST_YA, R * LIST_ZA, R * LIST_TX, R * LIST_TY, R * LIST_TZ,R * LIST_TXA, R * LIST_TYA, R * LIST_TZA, R * LIST_VX, R * LIST_VY, R * LIST_VZ, R * LIST_WX, R * LIST_WY, R * LIST_WZ, R * LIST_AX, R * LIST_AY, R * LIST_AZ, R * LIST_AWX, R * LIST_AWY, R * LIST_AWZ, int * LIST_C, int * LIST_H, R * LIST_M, R * LIST_I, R * FX, R * FY, R * FZ, R * MTX, R * MTY, R * MTZ, bool * EDGE, bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6,bool * EDGEC, int * NBCONTCO, R * LIST_V, R * LIST_IND, R & N1, R & N2, R & N3, R & N4, R & N5, R & N6);

void init_sphT(int NB_SPH, R Tinit, R Timp, R * LIST_TEMP, bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4,  bool * EDGE5, bool * EDGE6,
R ** NCONT,int NBCO, int ** CONT, R* LIST_X, R* LIST_Y, R* LIST_Z, R * DCONTO, R * DeltaT, int dir, bool btype);

void init_sphC(int NB_SPH, R Cinit, R Cimp, R * LIST_CONW,R * Cp_eff, R * LIST_M, R * LIST_V, R p, R Cps, R Cpw, R rhos, R Mw, bool * EDGE1, bool * EDGE2, bool * EDGE3, bool * EDGE4, bool * EDGE5, bool * EDGE6, R ** NCONT,int NBCO, int ** CONT, R* LIST_X, R* LIST_Y, R* LIST_Z, R * DCONTO, R * DeltaC, int dir, bool btype);

#endif
